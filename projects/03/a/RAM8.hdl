// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
        DMux8Way(in = load, sel[0..2] = address, a = a, b = b, c = c, d = d, e = e, f = f, g = g, h = h);

        Register (in[0..15] = in[0..15], load = a, out[0..15] = r0);
        Register (in[0..15] = in[0..15], load = b, out[0..15] = r1);
        Register (in[0..15] = in[0..15], load = c, out[0..15] = r2);
        Register (in[0..15] = in[0..15], load = d, out[0..15] = r3);
        Register (in[0..15] = in[0..15], load = e, out[0..15] = r4);
        Register (in[0..15] = in[0..15], load = f, out[0..15] = r5);
        Register (in[0..15] = in[0..15], load = g, out[0..15] = r6);
        Register (in[0..15] = in[0..15], load = h, out[0..15] = r7);

        Mux8Way16  (
            a[0..15] = r0,
            b[0..15] = r1,
            c[0..15] = r2,
            d[0..15] = r3,
            e[0..15] = r4,
            f[0..15] = r5,
            g[0..15] = r6,
            h[0..15] = r7,
            sel[0..2] = address,
            out[0..15] = out
        );
}